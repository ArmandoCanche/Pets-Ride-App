{
  "version": 3,
  "sources": ["../../@toolpad/core/esm/Account/Account.js", "../../@toolpad/core/esm/Account/SignInButton.js", "../../@toolpad/core/esm/Account/AccountLocaleContext.js", "../../@toolpad/core/esm/Account/SignOutButton.js", "../../@toolpad/core/esm/Account/AccountPreview.js", "../../@toolpad/core/esm/Account/AccountPopoverHeader.js", "../../@toolpad/core/esm/Account/AccountPopoverFooter.js"],
  "sourcesContent": ["'use client';\n\nvar _AccountPopoverHeader, _Divider;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Popover from '@mui/material/Popover';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\nimport { SignInButton } from \"./SignInButton.js\";\nimport { SignOutButton } from \"./SignOutButton.js\";\nimport { AccountPreview } from \"./AccountPreview.js\";\nimport { AccountPopoverHeader } from \"./AccountPopoverHeader.js\";\nimport { AccountPopoverFooter } from \"./AccountPopoverFooter.js\";\nimport { SessionContext, AuthenticationContext } from \"../AppProvider/AppProvider.js\";\nimport { useLocaleText } from \"../AppProvider/LocalizationProvider.js\";\nimport { AccountLocaleContext } from \"./AccountLocaleContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultAccountLocaleText = {\n  accountPreviewIconButtonLabel: 'Current User',\n  accountPreviewTitle: 'Account',\n  accountSignInLabel: 'Sign in',\n  accountSignOutLabel: 'Sign out'\n};\n\n/**\n *\n * Demos:\n *\n * - [Account](https://mui.com/toolpad/core/react-account/)\n * - [Dashboard Layout](https://mui.com/toolpad/core/react-dashboard-layout/)\n * - [Sign-in Page](https://mui.com/toolpad/core/react-sign-in-page/)\n *\n * API:\n *\n * - [Account API](https://mui.com/toolpad/core/api/account)\n */\nfunction Account(props) {\n  const {\n    localeText: propsLocaleText\n  } = props;\n  const globalLocaleText = useLocaleText();\n  const localeText = React.useMemo(() => ({\n    ...defaultAccountLocaleText,\n    ...globalLocaleText,\n    ...propsLocaleText\n  }), [globalLocaleText, propsLocaleText]);\n  const {\n    slots,\n    slotProps\n  } = props;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const session = React.useContext(SessionContext);\n  const authentication = React.useContext(AuthenticationContext);\n  const open = Boolean(anchorEl);\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  if (!authentication) {\n    return null;\n  }\n  let accountContent = null;\n  if (!session?.user) {\n    accountContent = slots?.signInButton ? /*#__PURE__*/_jsx(slots.signInButton, {\n      onClick: authentication.signIn\n    }) : /*#__PURE__*/_jsx(SignInButton, {\n      ...slotProps?.signInButton\n    });\n  } else {\n    accountContent = /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [slots?.preview ? /*#__PURE__*/_jsx(slots.preview, {\n        handleClick: handleClick,\n        open: open\n      }) : /*#__PURE__*/_jsx(AccountPreview, {\n        variant: \"condensed\",\n        handleClick: handleClick,\n        open: open,\n        ...slotProps?.preview\n      }), slots?.popover ? /*#__PURE__*/_jsx(slots.popover, {\n        open: open,\n        onClick: handleClick,\n        onClose: handleClose,\n        ...slotProps?.popover\n      }) : /*#__PURE__*/_jsx(Popover, {\n        anchorEl: anchorEl,\n        id: \"account-menu\",\n        open: open,\n        onClose: handleClose,\n        onClick: handleClose,\n        transformOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'bottom'\n        },\n        ...slotProps?.popover,\n        slotProps: {\n          paper: {\n            elevation: 0,\n            sx: {\n              overflow: 'visible',\n              filter: theme => `drop-shadow(0px 2px 8px ${theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.10)' : 'rgba(0,0,0,0.32)'})`,\n              mt: 1,\n              '&::before': {\n                content: '\"\"',\n                display: 'block',\n                position: 'absolute',\n                top: 0,\n                right: 14,\n                width: 10,\n                height: 10,\n                bgcolor: 'background.paper',\n                transform: 'translateY(-50%) rotate(45deg)',\n                zIndex: 0\n              }\n            }\n          },\n          ...slotProps?.popover?.slotProps\n        },\n        children: slots?.popoverContent ? /*#__PURE__*/_jsx(slots.popoverContent, {\n          ...slotProps?.popoverContent\n        }) : /*#__PURE__*/_jsxs(Stack, {\n          direction: \"column\",\n          ...slotProps?.popoverContent,\n          children: [_AccountPopoverHeader || (_AccountPopoverHeader = /*#__PURE__*/_jsx(AccountPopoverHeader, {\n            children: /*#__PURE__*/_jsx(AccountPreview, {\n              variant: \"expanded\"\n            })\n          })), _Divider || (_Divider = /*#__PURE__*/_jsx(Divider, {})), /*#__PURE__*/_jsx(AccountPopoverFooter, {\n            children: /*#__PURE__*/_jsx(SignOutButton, {\n              ...slotProps?.signOutButton\n            })\n          })]\n        })\n      })]\n    });\n  }\n  return /*#__PURE__*/_jsx(AccountLocaleContext.Provider, {\n    value: localeText,\n    children: accountContent\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? Account.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The labels for the account component.\n   */\n  localeText: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   */\n  slotProps: PropTypes.shape({\n    popover: PropTypes.object,\n    popoverContent: PropTypes.object,\n    preview: PropTypes.shape({\n      handleClick: PropTypes.func,\n      open: PropTypes.bool,\n      slotProps: PropTypes.shape({\n        avatar: PropTypes.object,\n        avatarIconButton: PropTypes.object,\n        moreIconButton: PropTypes.object\n      }),\n      slots: PropTypes.shape({\n        avatar: PropTypes.elementType,\n        avatarIconButton: PropTypes.elementType,\n        moreIconButton: PropTypes.elementType\n      }),\n      sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n      variant: PropTypes.oneOf(['condensed', 'expanded'])\n    }),\n    signInButton: PropTypes.object,\n    signOutButton: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside.\n   */\n  slots: PropTypes.shape({\n    popover: PropTypes.elementType,\n    popoverContent: PropTypes.elementType,\n    preview: PropTypes.elementType,\n    signInButton: PropTypes.elementType,\n    signOutButton: PropTypes.elementType\n  })\n} : void 0;\nexport { Account };", "import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport { AuthenticationContext } from \"../AppProvider/index.js\";\nimport { useLocaleText } from \"../AppProvider/LocalizationProvider.js\";\nimport { AccountLocaleContext } from \"./AccountLocaleContext.js\";\n\n/**\n *\n * Demos:\n *\n * - [Account](https://mui.com/toolpad/core/react-account/)\n *\n * API:\n *\n * - [SignInButton API](https://mui.com/toolpad/core/api/sign-in-button)\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction SignInButton(props) {\n  const authentication = React.useContext(AuthenticationContext);\n  const globalLocaleText = useLocaleText();\n  const accountLocaleText = React.useContext(AccountLocaleContext);\n  const localeText = {\n    ...globalLocaleText,\n    ...accountLocaleText\n  };\n  return /*#__PURE__*/_jsx(Button, {\n    disableElevation: true,\n    variant: \"contained\",\n    size: \"small\",\n    onClick: authentication?.signIn,\n    sx: {\n      textTransform: 'capitalize',\n      filter: 'opacity(0.9)',\n      width: '50%',\n      margin: theme => `${theme.spacing(1)} auto`,\n      transition: 'filter 0.2s ease-in',\n      '&:hover': {\n        filter: 'opacity(1)'\n      }\n    },\n    ...props,\n    children: localeText?.accountSignInLabel\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? SignInButton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node\n} : void 0;\nexport { SignInButton };", "'use client';\n\nimport * as React from 'react';\n/**\n * @ignore - internal component.\n */\nexport const AccountLocaleContext = /*#__PURE__*/React.createContext(null);", "var _LogoutIcon;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport { AuthenticationContext } from \"../AppProvider/index.js\";\nimport { useLocaleText } from \"../AppProvider/LocalizationProvider.js\";\nimport { AccountLocaleContext } from \"./AccountLocaleContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n *\n * Demos:\n *\n * - [Account](https://mui.com/toolpad/core/react-account/)\n *\n * API:\n *\n * - [SignOutButton API](https://mui.com/toolpad/core/api/sign-out-button)\n */\nfunction SignOutButton(props) {\n  const authentication = React.useContext(AuthenticationContext);\n  const globalLocaleText = useLocaleText();\n  const accountLocaleText = React.useContext(AccountLocaleContext);\n  const localeText = {\n    ...globalLocaleText,\n    ...accountLocaleText\n  };\n  return /*#__PURE__*/_jsx(Button, {\n    disabled: !authentication,\n    variant: \"outlined\",\n    size: \"small\",\n    disableElevation: true,\n    onClick: authentication?.signOut,\n    sx: {\n      textTransform: 'capitalize',\n      fontWeight: 'normal',\n      filter: 'opacity(0.9)',\n      transition: 'filter 0.2s ease-in',\n      '&:hover': {\n        filter: 'opacity(1)'\n      }\n    },\n    startIcon: _LogoutIcon || (_LogoutIcon = /*#__PURE__*/_jsx(LogoutIcon, {})),\n    ...props,\n    children: localeText?.accountSignOutLabel\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? SignOutButton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node\n} : void 0;\nexport { SignOutButton };", "var _MoreVertIcon;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport Tooltip from '@mui/material/Tooltip';\nimport Stack from '@mui/material/Stack';\nimport IconButton from '@mui/material/IconButton';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { SessionContext } from \"../AppProvider/index.js\";\nimport { useLocaleText } from \"../AppProvider/LocalizationProvider.js\";\nimport { AccountLocaleContext } from \"./AccountLocaleContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * The AccountPreview component displays user account information.\n *\n * Demos:\n *\n * - [Account](https://mui.com/toolpad/core/react-account/)\n *\n * API:\n *\n * - [AccountPreview API](https://mui.com/toolpad/core/api/account-preview)\n */\nfunction AccountPreview(props) {\n  const {\n    slots,\n    variant = 'condensed',\n    slotProps,\n    open,\n    handleClick,\n    sx\n  } = props;\n  const session = React.useContext(SessionContext);\n  const globalLocaleText = useLocaleText();\n  const accountLocaleText = React.useContext(AccountLocaleContext);\n  const localeText = {\n    ...globalLocaleText,\n    ...accountLocaleText\n  };\n  if (!session || !session.user) {\n    return null;\n  }\n  const avatarContent = slots?.avatar ? /*#__PURE__*/_jsx(slots.avatar, {}) : /*#__PURE__*/_jsx(Avatar, {\n    src: session.user?.image || '',\n    alt: session.user?.name || session.user?.email || '',\n    sx: {\n      height: variant === 'expanded' ? 48 : 32,\n      width: variant === 'expanded' ? 48 : 32\n    },\n    ...slotProps?.avatar\n  });\n  if (variant === 'expanded') {\n    return /*#__PURE__*/_jsxs(Stack, {\n      direction: \"row\",\n      justifyContent: \"space-between\",\n      sx: {\n        py: 1,\n        px: 2,\n        gap: 2,\n        ...sx\n      },\n      children: [/*#__PURE__*/_jsxs(Stack, {\n        direction: \"row\",\n        justifyContent: \"flex-start\",\n        spacing: 2,\n        overflow: \"hidden\",\n        children: [avatarContent, /*#__PURE__*/_jsxs(Stack, {\n          direction: \"column\",\n          justifyContent: \"space-evenly\",\n          overflow: \"hidden\",\n          children: [/*#__PURE__*/_jsx(Typography, {\n            variant: \"body2\",\n            fontWeight: \"bolder\",\n            noWrap: true,\n            children: session.user?.name\n          }), /*#__PURE__*/_jsx(Typography, {\n            variant: \"caption\",\n            noWrap: true,\n            children: session.user?.email\n          })]\n        })]\n      }), handleClick && (slots?.moreIconButton ? /*#__PURE__*/_jsx(slots.moreIconButton, {}) : /*#__PURE__*/_jsx(IconButton, {\n        size: \"small\",\n        onClick: handleClick,\n        ...slotProps?.moreIconButton,\n        sx: {\n          alignSelf: 'center',\n          ...slotProps?.moreIconButton?.sx\n        },\n        children: _MoreVertIcon || (_MoreVertIcon = /*#__PURE__*/_jsx(MoreVertIcon, {\n          fontSize: \"small\"\n        }))\n      }))]\n    });\n  }\n  return /*#__PURE__*/_jsx(Tooltip, {\n    title: session.user.name ?? accountLocaleText?.accountPreviewTitle,\n    children: slots?.avatarIconButton ? /*#__PURE__*/_jsx(slots.avatarIconButton, {\n      ...slotProps?.avatarIconButton\n    }) : /*#__PURE__*/_jsx(Stack, {\n      sx: {\n        py: 0.5,\n        ...sx\n      },\n      children: /*#__PURE__*/_jsx(IconButton, {\n        onClick: handleClick,\n        \"aria-label\": localeText?.accountPreviewIconButtonLabel,\n        size: \"small\",\n        \"aria-controls\": open ? 'account-menu' : undefined,\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": open ? 'true' : undefined,\n        ...slotProps?.avatarIconButton,\n        sx: {\n          width: 'fit-content',\n          margin: '0 auto',\n          ...slotProps?.avatarIconButton?.sx\n        },\n        children: avatarContent\n      })\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? AccountPreview.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The handler used when the preview is expanded\n   */\n  handleClick: PropTypes.func,\n  /**\n   * The state of the Account popover\n   * @default false\n   */\n  open: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   */\n  slotProps: PropTypes.shape({\n    avatar: PropTypes.object,\n    avatarIconButton: PropTypes.object,\n    moreIconButton: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside.\n   */\n  slots: PropTypes.shape({\n    avatar: PropTypes.elementType,\n    avatarIconButton: PropTypes.elementType,\n    moreIconButton: PropTypes.elementType\n  }),\n  /**\n   * The prop used to customize the styling of the preview\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of account details to display.\n   * @property {'condensed'} condensed - Shows only the user's avatar.\n   * @property {'expanded'} expanded - Displays the user's avatar, name, and email if available.\n   * @default 'condensed'\n   */\n  variant: PropTypes.oneOf(['condensed', 'expanded'])\n} : void 0;\nexport { AccountPreview };", "import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n *\n * Demos:\n *\n * - [Account](https://mui.com/toolpad/core/react-account/)\n *\n * API:\n *\n * - [AccountPopoverHeader API](https://mui.com/toolpad/core/api/account-popover-header)\n */\nfunction AccountPopoverHeader(props) {\n  const {\n    children,\n    ...rest\n  } = props;\n  return /*#__PURE__*/_jsx(Stack, {\n    ...rest,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? AccountPopoverHeader.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node\n} : void 0;\nexport { AccountPopoverHeader };", "import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n *\n * Demos:\n *\n * - [Account](https://mui.com/toolpad/core/react-account/)\n *\n * API:\n *\n * - [AccountPopoverFooter API](https://mui.com/toolpad/core/api/account-popover-footer)\n */\nfunction AccountPopoverFooter(props) {\n  const {\n    children,\n    ...rest\n  } = props;\n  return /*#__PURE__*/_jsx(Box, {\n    ...rest,\n    sx: {\n      display: 'flex',\n      flexDirection: 'row',\n      p: 1,\n      justifyContent: 'flex-end',\n      ...rest.sx\n    },\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? AccountPopoverFooter.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { AccountPopoverFooter };"],
  "mappings": "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",
  "names": ["React", "import_prop_types", "React", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_jsx", "_jsxs", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "_jsx", "PropTypes", "import_jsx_runtime", "_jsx", "_jsxs", "PropTypes"]
}
